{{- if .Values.ingress.enabled -}}
  {{- $fullName := .Values.name -}}
  {{- $svcPort := .Values.service.port -}}
  {{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
  {{- end }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "ngpp-store-cluster-aks-helm.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range $index, $ingress := .Values.ingress.hosts }}
    {{- if and (eq $index 0) (gt ( len $ingress.host ) 64) }}
    {{- fail (cat $ingress.host "is longer than 64 Char. The limitation applies only to the first hosts entry.") }}
    {{- else }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: /
            pathType: ImplementationSpecific
            backend:              
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}             
          {{- end }}
    {{- end }}
    {{- end }}
{{- end }}
